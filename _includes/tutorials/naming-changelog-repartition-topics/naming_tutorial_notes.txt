try (final TopologyTestDriver testDriver = new TopologyTestDriver(topology, streamProps)) {

            final Serde<Long> longAvroSerde = NamingChangelogAndRepartitionTopics.<Long>getPrimitiveAvroSerde(envProps, true);
            final SpecificAvroSerde<Example> exampleAvroSerde = NamingChangelogAndRepartitionTopics.<Example>getSpecificAvroSerde(envProps);

            final Serializer<Long> keySerializer = longAvroSerde.serializer();
            final Deserializer<Long> keyDeserializer = longAvroSerde.deserializer();
            final Serializer<Example> exampleSerializer = exampleAvroSerde.serializer();
            final Deserializer<Example> exampleDeserializer = exampleAvroSerde.deserializer();

            final TestInputTopic<Long, Example>  inputTopic = testDriver.createInputTopic(exampleInputTopic, keySerializer, exampleSerializer);
            final TestOutputTopic<Long, Example> outputTopic = testDriver.createOutputTopic(exampleOutputTopic, keyDeserializer, exampleDeserializer);


            final List<Example> examples = new ArrayList<>();
            examples.add(Example.newBuilder().setId(0L).setName("5foo").build());
            examples.add(Example.newBuilder().setId(0L).setName("6bar").build());
            examples.add(Example.newBuilder().setId(0L).setName("7baz").build());

             final List<Example> expectedExamples = new ArrayList<>();
            expectedExamples.add(Example.newBuilder().setId(5L).setName("Hello foo").build());
            expectedExamples.add(Example.newBuilder().setId(6L).setName("Hello bar").build());
            expectedExamples.add(Example.newBuilder().setId(7L).setName("Hello baz").build());


            for (final Example example : examples) {
                inputTopic.pipeInput(example.getId(), example);
            }

            final List<Example> actualExampleResults = outputTopic.readValuesToList();

            assertEquals(expectedExamples, actualExampleResults);
        }
    }


    final String expectedTopologyNoNames = "Topologies:\n"
        + "   Sub-topology: 0\n"
        + "    Source: KSTREAM-SOURCE-0000000000 (topics: [input-topic])\n"
        + "      --> KSTREAM-KEY-SELECT-0000000001\n"
        + "    Processor: KSTREAM-KEY-SELECT-0000000001 (stores: [])\n"
        + "      --> KSTREAM-FILTER-0000000005, KSTREAM-FILTER-0000000009\n"
        + "      <-- KSTREAM-SOURCE-0000000000\n"
        + "    Processor: KSTREAM-FILTER-0000000005 (stores: [])\n"
        + "      --> KSTREAM-SINK-0000000004\n"
        + "      <-- KSTREAM-KEY-SELECT-0000000001\n"
        + "    Processor: KSTREAM-FILTER-0000000009 (stores: [])\n"
        + "      --> KSTREAM-SINK-0000000008\n"
        + "      <-- KSTREAM-KEY-SELECT-0000000001\n"
        + "    Sink: KSTREAM-SINK-0000000004 (topic: KSTREAM-AGGREGATE-STATE-STORE-0000000002-repartition)\n"
        + "      <-- KSTREAM-FILTER-0000000005\n"
        + "    Sink: KSTREAM-SINK-0000000008 (topic: KSTREAM-KEY-SELECT-0000000001-repartition)\n"
        + "      <-- KSTREAM-FILTER-0000000009\n"
        + "\n"
        + "  Sub-topology: 1\n"
        + "    Source: KSTREAM-SOURCE-0000000006 (topics: [KSTREAM-AGGREGATE-STATE-STORE-0000000002-repartition])\n"
        + "      --> KSTREAM-AGGREGATE-0000000003\n"
        + "    Processor: KSTREAM-AGGREGATE-0000000003 (stores: [KSTREAM-AGGREGATE-STATE-STORE-0000000002])\n"
        + "      --> KTABLE-TOSTREAM-0000000007\n"
        + "      <-- KSTREAM-SOURCE-0000000006\n"
        + "    Source: KSTREAM-SOURCE-0000000010 (topics: [KSTREAM-KEY-SELECT-0000000001-repartition])\n"
        + "      --> KSTREAM-WINDOWED-0000000011\n"
        + "    Processor: KTABLE-TOSTREAM-0000000007 (stores: [])\n"
        + "      --> KSTREAM-WINDOWED-0000000012\n"
        + "      <-- KSTREAM-AGGREGATE-0000000003\n"
        + "    Processor: KSTREAM-WINDOWED-0000000011 (stores: [KSTREAM-JOINTHIS-0000000013-store])\n"
        + "      --> KSTREAM-JOINTHIS-0000000013\n"
        + "      <-- KSTREAM-SOURCE-0000000010\n"
        + "    Processor: KSTREAM-WINDOWED-0000000012 (stores: [KSTREAM-JOINOTHER-0000000014-store])\n"
        + "      --> KSTREAM-JOINOTHER-0000000014\n"
        + "      <-- KTABLE-TOSTREAM-0000000007\n"
        + "    Processor: KSTREAM-JOINOTHER-0000000014 (stores: [KSTREAM-JOINTHIS-0000000013-store])\n"
        + "      --> KSTREAM-MERGE-0000000015\n"
        + "      <-- KSTREAM-WINDOWED-0000000012\n"
        + "    Processor: KSTREAM-JOINTHIS-0000000013 (stores: [KSTREAM-JOINOTHER-0000000014-store])\n"
        + "      --> KSTREAM-MERGE-0000000015\n"
        + "      <-- KSTREAM-WINDOWED-0000000011\n"
        + "    Processor: KSTREAM-MERGE-0000000015 (stores: [])\n"
        + "      --> KSTREAM-SINK-0000000016\n"
        + "      <-- KSTREAM-JOINTHIS-0000000013, KSTREAM-JOINOTHER-0000000014\n"
        + "    Sink: KSTREAM-SINK-0000000016 (topic: output-topic)\n"
        + "      <-- KSTREAM-MERGE-0000000015\n";


    String expectedNamedTopology = "Topologies:\n"
        + "   Sub-topology: 0\n"
        + "    Source: KSTREAM-SOURCE-0000000000 (topics: [input-topic])\n"
        + "      --> KSTREAM-KEY-SELECT-0000000001\n"
        + "    Processor: KSTREAM-KEY-SELECT-0000000001 (stores: [])\n"
        + "      --> KSTREAM-FILTER-0000000004, KSTREAM-FILTER-0000000008\n"
        + "      <-- KSTREAM-SOURCE-0000000000\n"
        + "    Processor: KSTREAM-FILTER-0000000004 (stores: [])\n"
        + "      --> KSTREAM-SINK-0000000003\n"
        + "      <-- KSTREAM-KEY-SELECT-0000000001\n"
        + "    Processor: KSTREAM-FILTER-0000000008 (stores: [])\n"
        + "      --> KSTREAM-SINK-0000000007\n"
        + "      <-- KSTREAM-KEY-SELECT-0000000001\n"
        + "    Sink: KSTREAM-SINK-0000000003 (topic: count-repartition)\n"
        + "      <-- KSTREAM-FILTER-0000000004\n"
        + "    Sink: KSTREAM-SINK-0000000007 (topic: join-left-repartition)\n"
        + "      <-- KSTREAM-FILTER-0000000008\n"
        + "\n"
        + "  Sub-topology: 1\n"
        + "    Source: KSTREAM-SOURCE-0000000005 (topics: [count-repartition])\n"
        + "      --> KSTREAM-AGGREGATE-0000000002\n"
        + "    Processor: KSTREAM-AGGREGATE-0000000002 (stores: [count-store])\n"
        + "      --> KTABLE-TOSTREAM-0000000006\n"
        + "      <-- KSTREAM-SOURCE-0000000005\n"
        + "    Source: KSTREAM-SOURCE-0000000009 (topics: [join-left-repartition])\n"
        + "      --> join-this-windowed\n"
        + "    Processor: KTABLE-TOSTREAM-0000000006 (stores: [])\n"
        + "      --> join-other-windowed\n"
        + "      <-- KSTREAM-AGGREGATE-0000000002\n"
        + "    Processor: join-other-windowed (stores: [join-store-other-join-store])\n"
        + "      --> join-other-join\n"
        + "      <-- KTABLE-TOSTREAM-0000000006\n"
        + "    Processor: join-this-windowed (stores: [join-store-this-join-store])\n"
        + "      --> join-this-join\n"
        + "      <-- KSTREAM-SOURCE-0000000009\n"
        + "    Processor: join-other-join (stores: [join-store-this-join-store])\n"
        + "      --> join-merge\n"
        + "      <-- join-other-windowed\n"
        + "    Processor: join-this-join (stores: [join-store-other-join-store])\n"
        + "      --> join-merge\n"
        + "      <-- join-this-windowed\n"
        + "    Processor: join-merge (stores: [])\n"
        + "      --> KSTREAM-SINK-0000000015\n"
        + "      <-- join-this-join, join-other-join\n"
        + "    Sink: KSTREAM-SINK-0000000015 (topic: output-topic)\n"
        + "      <-- join-merge\n";
